<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Lò Sìngの學習筆記</title>
    <link>http://losing.xyz/post/</link>
    <description>Recent content in Posts on Lò Sìngの學習筆記</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 09 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://losing.xyz/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>展示一则旧博客</title>
      <link>http://losing.xyz/post/2019_07_09_old_blog/</link>
      <pubDate>Tue, 09 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>http://losing.xyz/post/2019_07_09_old_blog/</guid>
      <description>以下的内容是我整理资料时从旧的博客资料库里找到的，一晃两年半过去，时间过得真快。
 Published Date: 2017-03-11
 搭建博客真辛苦😓 怎么说呢，一直想鼓捣一个Blog，这次真是牟足劲，终于整完了。
这和我牟足劲，硬着头皮写（模仿？抄）了一个爬虫，真是异曲同工？
这两者过程都有些ugly，但也算是对我的新晋人生信条：keep shipping 的实践了！
搭博客的第二天 为Blog增加了favicon。
依然没有很系统的理解hexo。
不过，因为折腾Blog接触到了一些有意思的独立博客。</description>
    </item>
    
    <item>
      <title>个人笔记系统的搭建</title>
      <link>http://losing.xyz/post/2019_07_08_private_note_system/</link>
      <pubDate>Mon, 08 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>http://losing.xyz/post/2019_07_08_private_note_system/</guid>
      <description>笔记格式的选择 Markdown是一种轻量级标记语言，它拥有丰富的标记语法，足以生成一份漂亮的文档，同时，它又是基于纯文本格式，不会存在word版本兼容问题。这些优点让它成为了多设备笔记同步的不二之选。
同步方式的选择 谈到同步，其实对于笔记系统，我们想要的功能其实就是：即时地同步Android上的笔记文件夹以及Mac上的笔记文件夹。用现有的百度云、腾讯云什么的来做这件事儿，似乎显得大材小用了。一个更轻量级的方案是：用github私有源来同步，即时、私密又安全。
笔记软件的选择（Android端） 对于Android端笔记软件，我认为应该从以下几个角度考虑：
 有预览模式 支持文件夹浏览 支持图片  我想市面上的markdown软件基本都满足第一个条件，而满足后两个条件可以说是寥寥无几。我也是积极寻觅，最后发现一款叫“Epsilon”的App完全契合我的需求。
笔记软件的选择（Mac端） Mac端就没什么好犹豫的了，选Typora，就对了！支持实时预览，支持文件夹管理，没有理由不选择它，不是么。
笔记系统的搭建 基础步骤：
 建立一个github私有源； 通过ssh，分别将Android和Mac连接到github私有源 基础的笔记同步完成  优化步骤：
 分别在Mac和Android上编写一键同步的脚本 编写一个脚本，方便快速输入想法  更进一步的优化……
（未完待续）</description>
    </item>
    
    <item>
      <title>资料误删之后</title>
      <link>http://losing.xyz/post/2019_07_08_after_data_deletion/</link>
      <pubDate>Mon, 08 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>http://losing.xyz/post/2019_07_08_after_data_deletion/</guid>
      <description>起因 本来今天正在鼓捣博客发布的自动化脚本，我想要用一个 rm 命令删除blog/public文件夹，我写的是 cd ./public，然后rm -rf，这条命令可真是坑死了我，我执行它的时候是在主目录（~/）下执行的，理所当然的，终端没有找到 ~/public，当然它不会停止，接下来就是愉快的执行rm -rf命令了，于是，我的资料欢快地被删除了，包括但不限于：我的日记！所有日记！还有各种文档！以及各种我做的小东西！一切都似乎从头再来，关于我的过往的digital copy全没了！！！
恢复 我能恢复的，仅仅就只有我的博客，和我的私人笔记。以前所有没有备份的资料，全部都没有了！！！还是很心痛！
恢复过程 git笔记系统 git笔记系统很顺利地恢复了。
博客 博客，由于我没有备份源码，我又只得重新走一遍 hugo 的流程（顺便给博客换了一个主题 X_X 算是苦中作乐吧），这之后把 源码备份在 src 分支，静态生成网页 备份在 master 分支。
总之… 很蛋疼，资料以这样一种方式丢失，很难受，真的很难受。</description>
    </item>
    
    <item>
      <title>搭博客</title>
      <link>http://losing.xyz/post/2019_06_30_build_my_blog/</link>
      <pubDate>Sun, 30 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>http://losing.xyz/post/2019_06_30_build_my_blog/</guid>
      <description>开头先来几个Q&amp;amp;A  Q：为什么要搭博客？
A：为了给自己一个最正式的对外输出的窗口。
Q：为什么起名 lò Sìing？
A：给博客起名字是个头疼的事儿，那索性就用自己名字的粤语拼音吧~
Q：搭完博客，你能保证持续输出吗？
A：大概率是不能，不过，我们走着瞧。
 好了，接下来就简单描述一下我搭博客的过程吧！
搭博客的过程 我采用的方案是：Github Page + Hugo。
第一步是用Hugo搭建一个本地的博客，然后输出成静态网页（在./public文件夹内）。
第二步是注册Github Page。
第三步在./public文件夹内 git init 一下，再remote一下，完成这个文件夹和git源的远程连接，接着就push一下就可以了。
之后就可以用，typora写作，流水线的po到这个博客上啦（怕不是，美好的幻想）。</description>
    </item>
    
  </channel>
</rss>